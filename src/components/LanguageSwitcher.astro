---
import { createLanguageSwitcher } from '../i18n/utils';

const { currentPath = '/' } = Astro.props;
const languageSwitcher = createLanguageSwitcher(currentPath);
---

<div class="language-switcher">
  <span class="current-language">
    {languageSwitcher.current.nativeName}
  </span>
  <div class="language-dropdown">
    {languageSwitcher.available.map(lang => (
      <a 
        href={languageSwitcher.getPath(lang.code)} 
        class="language-option"
        hreflang={lang.code}
      >
        {lang.nativeName}
      </a>
    ))}
  </div>
</div>

<style>
  .language-switcher {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: #f8f9fa;
    border-radius: 6px;
    border: 1px solid #e9ecef;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .language-switcher:hover {
    background: #e9ecef;
  }
  
  .current-language {
    font-weight: 500;
    color: #495057;
  }
  
  .language-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #e9ecef;
    border-radius: 6px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.2s ease;
    z-index: 1000;
  }
  
  .language-switcher:hover .language-dropdown {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  
  .language-option {
    display: block;
    padding: 0.75rem 1rem;
    color: #495057;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }
  
  .language-option:hover {
    background-color: #f8f9fa;
    color: #007bff;
  }
  
  /* 移动端适配 */
  @media (max-width: 768px) {
    .language-switcher {
      padding: 0.4rem 0.8rem;
      font-size: 0.9rem;
    }
    
    .language-dropdown {
      min-width: 120px;
    }
  }
</style>
