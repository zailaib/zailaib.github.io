---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  console.log('Default posts route:', posts);
  const paths: any[] = [];

  // 为默认语言（中文）生成路径，同时处理重定向
  for (const post of posts) {
    // 从slug中提取语言信息
    const slugParts = (post as any).slug.split('/');
    const lang = slugParts[0]; // 第一个部分应该是语言代码

    if (lang === 'zh') {
      // 移除语言前缀后的slug（移除 /zh/posts/ 前缀）
      const slugWithoutPrefix = slugParts.slice(2).join('/');

      // 为中文生成重定向路径
      paths.push({
        params: {
          slug: slugWithoutPrefix // 不包含语言前缀的slug
        },
        props: {
          post,
          lang,
          shouldRedirect: true
        },
      });
    } else {
      // 处理没有语言前缀的旧文章（向后兼容）
      paths.push({
        params: { slug: (post as any).slug },
        props: { post, lang: 'zh', shouldRedirect: false }, // 默认使用中文
      });
    }
  }

  return paths;
}

const { post, lang, shouldRedirect } = Astro.props as any;
console.log('Default route post:', post, lang, shouldRedirect);

// 如果需要重定向到语言特定的路径
if (shouldRedirect) {
  // 获取当前路径
  const currentPath = Astro.url.pathname;
  // 提取slug（移除 /posts/ 前缀）
  const slugWithoutPrefix = currentPath.replace('/posts/', '');

  // 重定向到正确语言的页面
  return Astro.redirect(`/${lang}/posts/${slugWithoutPrefix}`);
}

// 在构建时导入预生成的侧边栏数据
const sidebarData = await import('../../generated/sidebar.json');
const postsByCategory = (sidebarData as any).default;
---

<BaseLayout 
  title={(post as any).data.title} 
  sidebarData={postsByCategory}
  currentSlug={(post as any).slug}
>
  <article id="post-content" data-astro-transition="animate">
    <h1>{(post as any).data.title}</h1>
    <div>{(post as any).body}</div>
  </article>
</BaseLayout>
