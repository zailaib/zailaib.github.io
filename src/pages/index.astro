---
import { getCollection } from 'astro:content';
import { ClientRouter } from 'astro:transitions';
import type { CollectionEntry } from 'astro:content';
const posts = await getCollection('posts');

const postsByCategory = posts.reduce<Record<string, CollectionEntry<'posts'>[]>>((acc, post) => {
  const category = post.slug.split('/')[0]; // 获取一级目录作为分类
  if (!acc[category]) acc[category] = [];
  acc[category].push(post);
  return acc;
}, {});

---
<ClientRouter />
<div class="app-container">
  <aside class="sidebar">
    <script>
      // 保存侧边栏内容到localStorage
      document.addEventListener('DOMContentLoaded', () => {
        const sidebar = document.querySelector('.sidebar');
        if (sidebar) {
          localStorage.setItem('sidebarContent', sidebar.innerHTML);
        }
      });
    </script>
    {Object.entries(postsByCategory).map(([category, categoryPosts]) => (
      <section>
        <h2>{category}</h2>
        <ul>
          {categoryPosts.map(post => (
            <li>
              <a href={`/posts/${post.slug}`} data-astro-transition="animate">
                {post.data.title}
              </a>
              <time>{post.data.date.toLocaleDateString()}</time>
              <span> - {post.data.tags} </span>
            </li>
          ))}
        </ul>
      </section>
    ))}
  </aside>
  <main class="content" data-astro-transition="persist">
    <!-- Content will be dynamically replaced -->
  </main>
</div>

<style>
  .app-container {
    display: flex;
    gap: 2rem;
  }
  .sidebar {
    width: 300px;
    position: sticky;
    top: 1rem;
  }
  .content {
    flex: 1;
  }
</style>
